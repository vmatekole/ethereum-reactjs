{
  "_args": [
    [
      {
        "raw": "react-helmet@^3.1.0",
        "scope": null,
        "escapedName": "react-helmet",
        "name": "react-helmet",
        "rawSpec": "^3.1.0",
        "spec": ">=3.1.0 <4.0.0",
        "type": "range"
      },
      "/Users/Shared/code/ethereum-reactjs/app"
    ]
  ],
  "_from": "react-helmet@>=3.1.0 <4.0.0",
  "_id": "react-helmet@3.3.2",
  "_inCache": true,
  "_location": "/react-helmet",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/react-helmet-3.3.2.tgz_1484681740423_0.443081037607044"
  },
  "_npmUser": {
    "name": "nfl",
    "email": "richard.herrera@nfl.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-helmet@^3.1.0",
    "scope": null,
    "escapedName": "react-helmet",
    "name": "react-helmet",
    "rawSpec": "^3.1.0",
    "spec": ">=3.1.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-helmet/-/react-helmet-3.3.2.tgz",
  "_shasum": "0d5a985aca6fba0331331fb567ca3d96681a381c",
  "_shrinkwrap": null,
  "_spec": "react-helmet@^3.1.0",
  "_where": "/Users/Shared/code/ethereum-reactjs/app",
  "author": {
    "name": "NFL",
    "email": "engineers@nfl.com"
  },
  "bugs": {
    "url": "https://github.com/nfl/react-helmet/issues"
  },
  "contributors": [
    {
      "name": "Chris Welch",
      "email": "chris.welch@nfl.com"
    }
  ],
  "dependencies": {
    "deep-equal": "1.0.1",
    "object-assign": "^4.0.1",
    "react-side-effect": "^1.1.0"
  },
  "description": "A document head manager for React",
  "devDependencies": {
    "babel-cli": "6.16.0",
    "babel-core": "6.16.0",
    "babel-eslint": "7.0.0",
    "babel-plugin-add-module-exports": "0.2.1",
    "babel-plugin-transform-es2015-modules-commonjs": "6.16.0",
    "babel-preset-latest": "6.16.0",
    "babel-preset-react": "6.16.0",
    "babel-preset-stage-0": "6.16.0",
    "chai": "3.5.0",
    "cross-env": "3.0.0",
    "eslint": "3.11.1",
    "eslint-config-nfl": "11.0.0",
    "eslint-plugin-import": "1.16.0",
    "eslint-plugin-jsx-a11y": "3.0.1",
    "eslint-plugin-mocha": "4.7.0",
    "eslint-plugin-react": "6.7.1",
    "estraverse": "4.2.0",
    "estraverse-fb": "1.3.1",
    "isparta-loader": "2.0.0",
    "karma": "1.3.0",
    "karma-chai": "0.1.0",
    "karma-chai-sinon": "0.1.5",
    "karma-chrome-launcher": "2.0.0",
    "karma-coverage": "1.1.1",
    "karma-html-reporter": "0.2.7",
    "karma-mocha": "1.2.0",
    "karma-phantomjs-launcher": "1.0.2",
    "karma-phantomjs-shim": "1.4.0",
    "karma-sourcemap-loader": "0.3.7",
    "karma-spec-reporter": "0.0.26",
    "karma-tap-reporter": "0.0.6",
    "karma-webpack": "1.8.0",
    "mocha": "3.1.0",
    "phantomjs-prebuilt": "2.1.12",
    "react": "15.x",
    "react-dom": "15.x",
    "rimraf": "2.5.4",
    "sinon": "1.17.6",
    "sinon-chai": "2.8.0",
    "webpack": "1.13.2"
  },
  "directories": {},
  "dist": {
    "shasum": "0d5a985aca6fba0331331fb567ca3d96681a381c",
    "tarball": "https://registry.npmjs.org/react-helmet/-/react-helmet-3.3.2.tgz"
  },
  "gitHead": "86933c35ce910b6110327fab35d184b237a55726",
  "homepage": "https://github.com/nfl/react-helmet#readme",
  "keywords": [
    "react-helmet",
    "nfl",
    "react",
    "document",
    "head",
    "title",
    "meta",
    "link",
    "script",
    "base"
  ],
  "license": "MIT",
  "main": "./lib/Helmet.js",
  "maintainers": [
    {
      "name": "nfl",
      "email": "richard.herrera@nfl.com"
    }
  ],
  "name": "react-helmet",
  "optionalDependencies": {},
  "readme": "<img align=\"right\" height=\"200\" src=\"http://static.nfl.com/static/content/public/static/img/logos/nfl-engineering-light.svg\" />\n\n# React Helmet\n\n[![npm Version](https://img.shields.io/npm/v/react-helmet.svg?style=flat-square)](https://www.npmjs.org/package/react-helmet)\n[![Build Status](https://img.shields.io/travis/nfl/react-helmet/master.svg?style=flat-square)](https://travis-ci.org/nfl/react-helmet)\n[![Dependency Status](https://img.shields.io/david/nfl/react-helmet.svg?style=flat-square)](https://david-dm.org/nfl/react-helmet)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](CONTRIBUTING.md#pull-requests)\n\nThis reusable React component will manage all of your changes to the document head with support for document title, meta, link, style, script, noscript, and base tags.\n\nInspired by [react-document-title](https://github.com/gaearon/react-document-title)\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**  *generated with [DocToc](https://github.com/thlorenz/doctoc)*\n\n- [Examples](#examples)\n- [Features](#features)\n- [Installation](#installation)\n- [Server Usage](#server-usage)\n  - [As string output](#as-string-output)\n  - [As React components](#as-react-components)\n- [Use Cases](#use-cases)\n- [Contributing to this project](#contributing-to-this-project)\n- [License](#license)\n- [More Examples](#more-examples)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Examples\n```javascript\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\n\nexport default function Application () {\n    return (\n        <div className=\"application\">\n            <Helmet title=\"My Title\" />\n            ...\n        </div>\n    );\n};\n```\n\n```javascript\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\n\nexport default function Application () {\n    return (\n        <div className=\"application\">\n            <Helmet\n                htmlAttributes={{lang: \"en\", amp: undefined}} // amp takes no value\n                title=\"My Title\"\n                titleTemplate=\"MySite.com - %s\"\n                defaultTitle=\"My Default Title\"\n                titleAttributes={{itemprop: \"name\", lang: \"en\"}}\n                base={{target: \"_blank\", href: \"http://mysite.com/\"}}\n                meta={[\n                    {name: \"description\", content: \"Helmet application\"},\n                    {property: \"og:type\", content: \"article\"}\n                ]}\n                link={[\n                    {rel: \"canonical\", href: \"http://mysite.com/example\"},\n                    {rel: \"apple-touch-icon\", href: \"http://mysite.com/img/apple-touch-icon-57x57.png\"},\n                    {rel: \"apple-touch-icon\", sizes: \"72x72\", href: \"http://mysite.com/img/apple-touch-icon-72x72.png\"}\n                ]}\n                script={[\n                    {src: \"http://include.com/pathtojs.js\", type: \"text/javascript\"},\n                    {type: \"application/ld+json\", innerHTML: `{ \"@context\": \"http://schema.org\" }`}\n                ]}\n                noscript={[\n                    {innerHTML: `<link rel=\"stylesheet\" type=\"text/css\" href=\"foo.css\" />`}\n                ]}\n                style={[\n                  {type: \"text/css\", cssText: \"body {background-color: blue;} p {font-size: 12px;}\"}\n                ]}\n                onChangeClientState={(newState) => console.log(newState)}\n            />\n            ...\n        </div>\n    );\n};\n```\n\n## Features\n- Supports `title`, `base`, `meta`, `link`, `script`, `noscript`, and `style` tags.\n- Attributes for `html` and `title` tags.\n- Supports isomorphic/universal environment.\n- Nested components override duplicate head changes.\n- Duplicate head changes preserved when specified in same component (support for tags like \"apple-touch-icon\").\n- Callback for tracking DOM changes.\n\n## Installation\n```\nnpm install --save react-helmet\n```\n\n## Server Usage\nTo use on the server, call `rewind()` after `ReactDOMServer.renderToString` or `ReactDOMServer.renderToStaticMarkup` to get the head data for use in your prerender.\n\nBecause this component keeps track of mounted instances, **you have to make sure to call `rewind` on server**, or you'll get a memory leak.\n\n```javascript\nReactDOMServer.renderToString(<Handler />);\nlet head = Helmet.rewind();\n\nhead.htmlAttributes\nhead.title\nhead.base\nhead.meta\nhead.link\nhead.script\nhead.style\n```\n\n`head` contains the following properties:\n- `htmlAttributes`\n- `title`\n- `base`\n- `meta`\n- `link`\n- `script`\n- `noscript`\n- `style`\n\nEach property contains `toComponent()` and `toString()` methods. Use whichever is appropriate for your environment. For htmlAttributes, use the JSX spread operator on the object returned by `toComponent()`. E.g:\n\n### As string output\n```javascript\nconst html = `\n    <!doctype html>\n    <html ${head.htmlAttributes.toString()}>\n        <head>\n            ${head.title.toString()}\n            ${head.meta.toString()}\n            ${head.link.toString()}\n        </head>\n        <body>\n            <div id=\"content\">\n                // React stuff here\n            </div>\n        </body>\n    </html>\n`;\n```\n\n### As React components\n```javascript\nfunction HTML () {\n    const attrs = head.htmlAttributes.toComponent();\n\n    return (\n        <html {...attrs}>\n            <head>\n                {head.title.toComponent()}\n                {head.meta.toComponent()}\n                {head.link.toComponent()}\n            </head>\n            <body>\n                <div id=\"content\">\n                    // React stuff here\n                </div>\n            </body>\n        </html>\n    );\n}\n```\n\n## Use Cases\n1. Nested or latter components will override duplicate changes.\n  ```javascript\n  <Helmet\n      title=\"My Title\"\n      meta={[\n          {\"name\": \"description\", \"content\": \"Helmet application\"}\n      ]}\n  />\n  <Helmet\n      title=\"Nested Title\"\n      meta={[\n          {\"name\": \"description\", \"content\": \"Nested component\"}\n      ]}\n  />\n  ```\n  Yields:\n  ```\n  <head>\n      <title>Nested Title</title>\n      <meta name=\"description\" content=\"Nested component\">\n  </head>\n  ```\n\n2. Use a titleTemplate to format title text in your page title\n  ```javascript\n  <Helmet\n      title=\"My Title\"\n      titleTemplate=\"%s | MyAwesomeWebsite.com\"\n  />\n  <Helmet\n      title=\"Nested Title\"\n  />\n  ```\n  Yields:\n  ```\n  <head>\n      <title>Nested Title | MyAwesomeWebsite.com</title>\n  </head>\n  ```\n\n3. Duplicate `meta` and/or `link` tags in the same component are preserved\n  ```javascript\n  <Helmet\n      link={[\n          {\"rel\": \"apple-touch-icon\", \"href\": \"http://mysite.com/img/apple-touch-icon-57x57.png\"},\n          {\"rel\": \"apple-touch-icon\", \"sizes\": \"72x72\", \"href\": \"http://mysite.com/img/apple-touch-icon-72x72.png\"}\n      ]}\n  />\n  ```\n  Yields:\n  ```\n  <head>\n      <link rel=\"apple-touch-icon\" href=\"http://mysite.com/img/apple-touch-icon-57x57.png\">\n      <link rel=\"apple-touch-icon\" sizes=\"72x72\" href=\"http://mysite.com/img/apple-touch-icon-72x72.png\">\n  </head>\n  ```\n\n4. Duplicate tags can still be overwritten\n  ```javascript\n  <Helmet\n      link={[\n          {\"rel\": \"apple-touch-icon\", \"href\": \"http://mysite.com/img/apple-touch-icon-57x57.png\"},\n          {\"rel\": \"apple-touch-icon\", \"sizes\": \"72x72\", \"href\": \"http://mysite.com/img/apple-touch-icon-72x72.png\"}\n      ]}\n  />\n  <Helmet\n      link={[\n          {\"rel\": \"apple-touch-icon\", \"href\": \"http://mysite.com/img/apple-touch-icon-180x180.png\"}\n      ]}\n  />\n  ```\n  Yields:\n  ```\n  <head>\n      <link rel=\"apple-touch-icon\" href=\"http://mysite.com/img/apple-touch-icon-180x180.png\">\n  </head>\n  ```\n\n5. Only one base tag is allowed\n  ```javascript\n  <Helmet\n      base={{\"href\": \"http://mysite.com/\"}}\n  />\n  <Helmet\n      base={{\"href\": \"http://mysite.com/blog\"}}\n  />\n  ```\n  Yields:\n  ```\n  <head>\n      <base href=\"http://mysite.com/blog\">\n  </head>\n  ```\n\n6. defaultTitle will be used as a fallback when the template does not want to be used in the current Helmet\n  ```javascript\n  <Helmet\n      defaultTitle=\"My Site\"\n      titleTemplate=\"My Site - %s\"\n  />\n  ```\n  Yields:\n  ```\n  <head>\n      <title>My Site</title>\n  </head>\n  ```\n\n  But a child route with a title will use the titleTemplate, giving users a way to declare a titleTemplate for their app, but not have it apply to the root.\n\n  ```javascript\n  <Helmet\n      defaultTitle=\"My Site\"\n      titleTemplate=\"My Site - %s\"\n  />\n\n  <Helmet\n      title=\"Nested Title\"\n  />\n  ```\n  Yields:\n  ```\n  <head>\n      <title>My Site - Nested Title</title>\n  </head>\n  ```\n\n  And other child route components without a Helmet will inherit the defaultTitle.\n\n7. Usage with `<script>` tags:\n  ```javascript\n  <Helmet\n      script={[{\n          \"type\": \"application/ld+json\",\n          \"innerHTML\": `{\n              \"@context\": \"http://schema.org\",\n              \"@type\": \"NewsArticle\"\n          }`\n      }]}\n  />\n  ```\n  Yields:\n  ```\n  <head>\n      <script type=\"application/ld+json\">\n        {\n            \"@context\": \"http://schema.org\",\n            \"@type\": \"NewsArticle\"\n        }\n      </script>\n  </head>\n  ```\n\n8. Usage with `<style>` tags:\n  ```javascript\n  <Helmet\n      style={[{\n          \"cssText\": `\n              body {\n                  background-color: green;\n              }\n          `\n      }]}\n  />\n  ```\n  Yields:\n  ```\n  <head>\n      <style>\n          body {\n              background-color: green;\n          }\n      </style>\n  </head>\n  ```\n\n## Contributing to this project\nPlease take a moment to review the [guidelines for contributing](CONTRIBUTING.md).\n\n* [Pull requests](CONTRIBUTING.md#pull-requests)\n* [Development Process](CONTRIBUTING.md#development)\n\n## License\n\nMIT\n\n## More Examples\n[react-helmet-example](https://github.com/mattdennewitz/react-helmet-example)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nfl/react-helmet.git"
  },
  "scripts": {
    "clean": "rimraf lib build es",
    "compile": "npm run compile:commonjs && npm run compile:es",
    "compile:commonjs": "cross-env BABEL_ENV=commonjs babel src --out-dir lib",
    "compile:es": "cross-env BABEL_ENV=es babel src --out-dir es --ignore test.js",
    "lint": "eslint --ignore-path .gitignore -- .",
    "posttest": "cat ./build/reports/coverage/text.txt",
    "prepublish": "npm run compile",
    "pretest": "npm run clean && npm run lint && npm run compile",
    "test": "karma start karma.config.js"
  },
  "version": "3.3.2"
}
